import cocoa.*;
import cocoa.appkit.*;
import libc.(round, trunc, fmod);
import printer.formatter.*;
import maybe.*;

timeFormat(time: NSTimeInterval) {
    // XXX use locale time separator
    var seconds = Int(round(fmod(time, 60.0)));
    var minutes = Int(trunc(fmod(time/60.0, 60.0)));
    var hours = Int(trunc(fmod(time/3_600.0, 24.0)));
    var days = Int(trunc(time/86_400.0));

    var str = String();
    reserve(str, 10);

    if (days > 0)
        printTo(str,
            days, ':',
            rightAlignedWith(2, '0', hours), ':',
            rightAlignedWith(2, '0', minutes), ':',
            rightAlignedWith(2, '0', seconds)
        );
    else if (hours > 0)
        printTo(str,
            hours, ':',
            rightAlignedWith(2, '0', minutes), ':',
            rightAlignedWith(2, '0', seconds)
        );
    else
        printTo(str,
            minutes, ':',
            rightAlignedWith(2, '0', seconds)
        );

    return NSString(str);
}

[I | Integer?(I)]
dateFormat(date: I) {
    var date = NSDate.dateWithTimeIntervalSince1970(NSTimeInterval(date));
    var locale = NSLocale.autoupdatingCurrentLocale();
    var dateFormatter = Retained(NSDateFormatter.alloc().init());
    dateFormatter.setLocale(locale);
    dateFormatter.setDateStyle(NSDateFormatterStyle(NSDateFormatterShortStyle));
    dateFormatter.setTimeStyle(NSDateFormatterStyle(NSDateFormatterLongStyle));

    return Id(dateFormatter.stringFromDate(date));
}

overload dateFormat(n: Nothing) = nil();
